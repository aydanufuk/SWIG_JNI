/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class test {
  public static Foo new_foo_array(int nelements) {
    long cPtr = testJNI.new_foo_array(nelements);
    return (cPtr == 0) ? null : new Foo(cPtr, false);
  }

  public static void delete_foo_array(Foo ary) {
    testJNI.delete_foo_array(Foo.getCPtr(ary), ary);
  }

  public static Foo foo_array_getitem(Foo ary, int index) {
    return new Foo(testJNI.foo_array_getitem(Foo.getCPtr(ary), ary, index), true);
  }

  public static void foo_array_setitem(Foo ary, int index, Foo value) {
    testJNI.foo_array_setitem(Foo.getCPtr(ary), ary, index, Foo.getCPtr(value), value);
  }

  private static Foo getFooImpl() {
    long cPtr = testJNI.getFooImpl();
    return (cPtr == 0) ? null : new Foo(cPtr, false);
  }

  private static int numFoo() {
    return testJNI.numFoo();
  }


  public static Foo[] getFoo() {
    final int num = numFoo();
    Foo ret[] = new Foo[num];
    Foo result = getFooImpl();
    for (int i = 0; i < num; ++i) {
      ret[i] = foo_array_getitem(result, i);
    }
    return ret;
  }  

}
